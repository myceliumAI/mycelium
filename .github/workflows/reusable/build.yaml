name: Build Workflow

on:
  workflow_call:
    inputs:
      matrix:
        required: true
        type: string
        description: 'JSON array of services to build'
    outputs:
      image_tags:
        description: "JSON object mapping services to their image tags"
        value: ${{ jobs.build.outputs.image_tags }}
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true
      GITHUB_TOKEN:
        required: true

env:
  REGISTRY: docker.io
  REPOSITORY: myceliumai # Remplacez par votre nom d'organisation Docker

jobs:
  prepare:
    runs-on: ubuntu-22.04
    outputs:
      build_date: ${{ steps.prep.outputs.build_date }}
      version: ${{ steps.prep.outputs.version }}
    steps:
      - id: prep
        run: |
          echo "build_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

  build:
    needs: [prepare]
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        service: ${{ fromJson(inputs.matrix) }}
      fail-fast: false
    
    outputs:
      image_tags: ${{ steps.image-tags.outputs.tags }}

    steps:
      - uses: actions/checkout@v4
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'amd64,arm64'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          driver-opts: |
            network=host
            image=moby/buildkit:latest
            
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.service }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.service }}-
            
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate Image Tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ matrix.service }}
          tags: |
            type=semver,pattern={{version}},value=${{ needs.prepare.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ needs.prepare.outputs.version }}
            type=sha,format=long
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.created=${{ needs.prepare.outputs.build_date }}
            org.opencontainers.image.version=${{ needs.prepare.outputs.version }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            BUILD_DATE=${{ needs.prepare.outputs.build_date }}
            VERSION=${{ needs.prepare.outputs.version }}
            COMMIT_SHA=${{ github.sha }}
          
      # Temp fix for cache
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Record Image Tags
        id: image-tags
        run: |
          TAGS=$(echo '${{ steps.meta.outputs.json }}' | jq -c .)
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT

      - name: Scan Image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.meta.outputs.tags }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Scan Results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
          category: trivy-${{ matrix.service }}