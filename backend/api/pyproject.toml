[tool.poetry]
name = "mycelium"
version = "1.0.0"
description = "Backend for Mycelium, handling data contracts and ingestion"
authors = ["ThomasGraff <thomas.graff@servier.com>", "victor <victorgoubet@orange.fr>"]
license = "AGPL-3.0"
package-mode = false

[tool.poetry.dependencies]
python = "^3.10.12"
fastapi = "^0.115.0"
sqlalchemy = "^2.0.35"
pydantic = {extras = ["email"], version = "^2.9.2"}
PyYAML = "^6.0.1"
werkzeug = "^3.1.3"
psycopg2-binary = "^2.9.10"
uvicorn = "^0.34.0"

[tool.poetry.group.dev.dependencies]
deptry = "^0.22.0"
black = "^24.10.0"
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.23.5"
pytest-mock = "^3.12.0"
httpx = "^0.27.0"
factory-boy = "^3.3.0"
faker = "^22.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q"
testpaths = ["tests"]
asyncio_mode = "auto"
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
pythonpath = "."

[tool.coverage.run]
source = ["app"]
omit = ["tests/*", "**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.deptry.per_rule_ignores]
DEP002 = ["psycopg2-binary", "uvicorn"]