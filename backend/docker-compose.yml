services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BACKEND_PORT=${BACKEND_PORT}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_PORT=${POSTGRES_PORT}
        - POSTGRES_HOST=db
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      - BACKEND_PORT=${BACKEND_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${BACKEND_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  keycloak:
    image: quay.io/keycloak/keycloak:26.0.7
    command: start
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=${KC_BOOTSTRAP_ADMIN_USERNAME}
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${KC_BOOTSTRAP_ADMIN_PASSWORD}
      - KC_HOSTNAME=${BACKEND_HOST}
      - KC_DB_USERNAME=${POSTGRES_USER}
      - KC_DB_PASSWORD=${POSTGRES_PASSWORD}
      - KC_DB_URL=jdbc:postgresql://db:${POSTGRES_PORT}/${POSTGRES_DB}
      - KC_DB=postgres
      - KC_HTTP_ENABLED=true
      - KC_HTTPS_REQUIRED=none
      - KC_HOSTNAME_STRICT=false
      - KC_PROXY=edge
      - KC_HEALTH_ENABLED=true
      - KC_METRICS_ENABLED=true
    ports:
      - "${KC_PORT}:8080"
      - "${KC_MANAGEMENT_PORT}:9000"
    volumes:
      - keycloak-scripts:/opt/scripts
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test:
        - "CMD-SHELL"
        - "curl --fail --silent http://localhost:9000/health/ready || exit 1"
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 150s

  keycloak-bootstrap:
    image: curlimages/curl:latest
    volumes:
      - keycloak-scripts:/scripts
    environment:
      - KC_PORT=${KC_PORT}
      - KC_BOOTSTRAP_ADMIN_USERNAME=${KC_BOOTSTRAP_ADMIN_USERNAME}
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${KC_BOOTSTRAP_ADMIN_PASSWORD}
      - KC_REALM=${KC_REALM}
      - KC_CLIENT_ID=${KC_CLIENT_ID}
      - FRONTEND_HOST=${FRONTEND_HOST}
      - FRONTEND_PORT=${FRONTEND_PORT}
    entrypoint: ["/bin/sh", "/scripts/keycloak_bootstrap.sh"]
    depends_on:
      keycloak:
        condition: service_healthy
    networks:
      - app-network

volumes:
  postgres-data:
  keycloak-scripts:

networks:
  app-network:
    driver: bridge
